import numpy as np
from automesh import Spn

nel = [4, 5, 3]
number_of_elements = 39
scale = [1.2, 2.3, 0.4]
translate = [-0.3, 1.1, 0.5]

gold_blocks = np.ones(number_of_elements)
gold_connectivity = np.array([
    [1, 2, 6, 7, 31, 32, 36, 37],
    [2, 3, 7, 8, 32, 33, 37, 38],
    [3, 4, 8, 9, 33, 34, 38, 39],
    [4, 5, 9, 10, 34, 35, 39, 40],
    [6, 7, 11, 12, 36, 37, 41, 42],
    [7, 8, 12, 13, 37, 38, 42, 43],
    [8, 9, 13, 14, 38, 39, 43, 44],
    [9, 10, 14, 15, 39, 40, 44, 45],
    [11, 12, 16, 17, 41, 42, 46, 47],
    [12, 13, 17, 18, 42, 43, 47, 48],
    [13, 14, 18, 19, 43, 44, 48, 49],
    [14, 15, 19, 20, 44, 45, 49, 50],
    [16, 17, 21, 22, 46, 47, 51, 52],
    [17, 18, 22, 23, 47, 48, 52, 53],
    [18, 19, 23, 24, 48, 49, 53, 54],
    [19, 20, 24, 25, 49, 50, 54, 55],
    [21, 22, 26, 27, 51, 52, 56, 57],
    [22, 23, 27, 28, 52, 53, 57, 58],
    [23, 24, 28, 29, 53, 54, 58, 59],
    [24, 25, 29, 30, 54, 55, 59, 60],
    [31, 32, 36, 37, 61, 62, 63, 64],
    [36, 37, 41, 42, 63, 64, 65, 66],
    [41, 42, 46, 47, 65, 66, 70, 71],
    [42, 43, 47, 48, 66, 67, 71, 72],
    [43, 44, 48, 49, 67, 68, 72, 73],
    [44, 45, 49, 50, 68, 69, 73, 74],
    [46, 47, 51, 52, 70, 71, 75, 76],
    [51, 52, 56, 57, 75, 76, 80, 81],
    [52, 53, 57, 58, 76, 77, 81, 82],
    [53, 54, 58, 59, 77, 78, 82, 83],
    [54, 55, 59, 60, 78, 79, 83, 84],
    [61, 62, 63, 64, 85, 86, 87, 88],
    [63, 64, 65, 66, 87, 88, 89, 90],
    [65, 66, 70, 71, 89, 90, 91, 92],
    [70, 71, 75, 76, 91, 92, 93, 94],
    [75, 76, 80, 81, 93, 94, 98, 99],
    [76, 77, 81, 82, 94, 95, 99, 100],
    [77, 78, 82, 83, 95, 96, 100, 101],
    [78, 79, 83, 84, 96, 97, 101, 102],
])
gold_coordinates = np.array([
    [0.0, 0.0, 0.0],
    [1.0, 0.0, 0.0],
    [2.0, 0.0, 0.0],
    [3.0, 0.0, 0.0],
    [4.0, 0.0, 0.0],
    [0.0, 1.0, 0.0],
    [1.0, 1.0, 0.0],
    [2.0, 1.0, 0.0],
    [3.0, 1.0, 0.0],
    [4.0, 1.0, 0.0],
    [0.0, 2.0, 0.0],
    [1.0, 2.0, 0.0],
    [2.0, 2.0, 0.0],
    [3.0, 2.0, 0.0],
    [4.0, 2.0, 0.0],
    [0.0, 3.0, 0.0],
    [1.0, 3.0, 0.0],
    [2.0, 3.0, 0.0],
    [3.0, 3.0, 0.0],
    [4.0, 3.0, 0.0],
    [0.0, 4.0, 0.0],
    [1.0, 4.0, 0.0],
    [2.0, 4.0, 0.0],
    [3.0, 4.0, 0.0],
    [4.0, 4.0, 0.0],
    [0.0, 5.0, 0.0],
    [1.0, 5.0, 0.0],
    [2.0, 5.0, 0.0],
    [3.0, 5.0, 0.0],
    [4.0, 5.0, 0.0],
    [0.0, 0.0, 1.0],
    [1.0, 0.0, 1.0],
    [2.0, 0.0, 1.0],
    [3.0, 0.0, 1.0],
    [4.0, 0.0, 1.0],
    [0.0, 1.0, 1.0],
    [1.0, 1.0, 1.0],
    [2.0, 1.0, 1.0],
    [3.0, 1.0, 1.0],
    [4.0, 1.0, 1.0],
    [0.0, 2.0, 1.0],
    [1.0, 2.0, 1.0],
    [2.0, 2.0, 1.0],
    [3.0, 2.0, 1.0],
    [4.0, 2.0, 1.0],
    [0.0, 3.0, 1.0],
    [1.0, 3.0, 1.0],
    [2.0, 3.0, 1.0],
    [3.0, 3.0, 1.0],
    [4.0, 3.0, 1.0],
    [0.0, 4.0, 1.0],
    [1.0, 4.0, 1.0],
    [2.0, 4.0, 1.0],
    [3.0, 4.0, 1.0],
    [4.0, 4.0, 1.0],
    [0.0, 5.0, 1.0],
    [1.0, 5.0, 1.0],
    [2.0, 5.0, 1.0],
    [3.0, 5.0, 1.0],
    [4.0, 5.0, 1.0],
    [0.0, 0.0, 2.0],
    [1.0, 0.0, 2.0],
    [0.0, 1.0, 2.0],
    [1.0, 1.0, 2.0],
    [0.0, 2.0, 2.0],
    [1.0, 2.0, 2.0],
    [2.0, 2.0, 2.0],
    [3.0, 2.0, 2.0],
    [4.0, 2.0, 2.0],
    [0.0, 3.0, 2.0],
    [1.0, 3.0, 2.0],
    [2.0, 3.0, 2.0],
    [3.0, 3.0, 2.0],
    [4.0, 3.0, 2.0],
    [0.0, 4.0, 2.0],
    [1.0, 4.0, 2.0],
    [2.0, 4.0, 2.0],
    [3.0, 4.0, 2.0],
    [4.0, 4.0, 2.0],
    [0.0, 5.0, 2.0],
    [1.0, 5.0, 2.0],
    [2.0, 5.0, 2.0],
    [3.0, 5.0, 2.0],
    [4.0, 5.0, 2.0],
    [0.0, 0.0, 3.0],
    [1.0, 0.0, 3.0],
    [0.0, 1.0, 3.0],
    [1.0, 1.0, 3.0],
    [0.0, 2.0, 3.0],
    [1.0, 2.0, 3.0],
    [0.0, 3.0, 3.0],
    [1.0, 3.0, 3.0],
    [0.0, 4.0, 3.0],
    [1.0, 4.0, 3.0],
    [2.0, 4.0, 3.0],
    [3.0, 4.0, 3.0],
    [4.0, 4.0, 3.0],
    [0.0, 5.0, 3.0],
    [1.0, 5.0, 3.0],
    [2.0, 5.0, 3.0],
    [3.0, 5.0, 3.0],
    [4.0, 5.0, 3.0],
])
gold_data = np.array([
    [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
    [[1, 0, 0], [1, 0, 0], [1, 1, 0], [1, 0, 0], [1, 1, 1]],
    [[1, 0, 0], [1, 0, 0], [1, 1, 0], [1, 0, 0], [1, 1, 1]],
    [[1, 0, 0], [1, 0, 0], [1, 1, 0], [1, 0, 0], [1, 1, 1]],
])
for i in range(3):
    gold_coordinates[:, i] *= scale[i]
    gold_coordinates[:, i] += translate[i]


def test_as_finite_elements():
    spn = Spn.from_npy('tests/input/f.npy')
    fem = spn.as_finite_elements(scale, translate)
    assert (fem.element_blocks == gold_blocks).all()
    assert (fem.element_connectivity == gold_connectivity).all()
    assert (fem.nodal_coordinates == gold_coordinates).all()


def test_from_npy():
    spn = Spn.from_npy('tests/input/f.npy')
    assert (spn.data == gold_data).all()


def test_new():
    spn = Spn.from_spn('tests/input/f.spn', nel)
    assert (spn.data == gold_data).all()


def test_write_npy():
    Spn.from_spn('tests/input/f.spn', nel).write_npy('target/f.npy')
    spn = Spn.from_npy('target/f.npy')
    assert (spn.data == gold_data).all()
